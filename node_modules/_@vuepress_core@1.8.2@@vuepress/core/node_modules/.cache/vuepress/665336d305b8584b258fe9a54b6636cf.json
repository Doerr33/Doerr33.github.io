{"remainingRequest":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_vuepress-plugin-reading-progress@1.0.10@vuepress-plugin-reading-progress/ReadingProgress.vue?vue&type=style&index=0&id=544b6b70&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_vuepress-plugin-reading-progress@1.0.10@vuepress-plugin-reading-progress/ReadingProgress.vue","mtime":1657193489939},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_css-loader@2.1.1@css-loader/dist/cjs.js","mtime":1657193488498},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":1657193489890},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1657193489351},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_stylus-loader@3.0.2@stylus-loader/index.js","mtime":1657193489733},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":1657193488219},{"path":"/Users/yaya/Documents/blog/Doerr33.github.io/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":1657193489890}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKJHJlYWRpbmdCZ0NvbG9yID89IHRyYW5zcGFyZW50CiRyZWFkaW5nWkluZGV4ID89IDEwMDAKJHJlYWRpbmdTaXplID89IDNweAokcmVhZGluZ1Byb2dyZXNzQ29sb3IgPz0gJGFjY2VudENvbG9yCiRyZWFkaW5nUHJvZ3Jlc3NJbWFnZSA/PSBub25lCgoucmVhZGluZy1wcm9ncmVzcwogIHBvc2l0aW9uIGZpeGVkCiAgei1pbmRleCAkcmVhZGluZ1pJbmRleAogIGJhY2tncm91bmQgJHJlYWRpbmdCZ0NvbG9yCiAgb3ZlcmZsb3cgaGlkZGVuCiAgLnByb2dyZXNzCiAgICB3aWR0aCAxMDAlCiAgICBoZWlnaHQgMTAwJQogICAgYmFja2dyb3VuZCAkcmVhZGluZ1Byb2dyZXNzQ29sb3IKICAgIGJhY2tncm91bmQtaW1hZ2UgJHJlYWRpbmdQcm9ncmVzc0ltYWdlCiAgICB0cmFuc2Zvcm0tb3JpZ2luIDAlIDAlCiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIGVhc2Utb3V0Ci50b3AKICB0b3AgMAogIGxlZnQgMAogIHJpZ2h0IDAKICB3aWR0aCAxMDAlCiAgaGVpZ2h0ICRyZWFkaW5nU2l6ZQouYm90dG9tCiAgYm90dG9tIDAKICBsZWZ0IDAKICByaWdodCAwCiAgd2lkdGggMTAwJQogIGhlaWdodCAkcmVhZGluZ1NpemUKLmxlZnQKICBsZWZ0IDAKICB0b3AgMAogIGJvdHRvbSAwCiAgd2lkdGggJHJlYWRpbmdTaXplCiAgaGVpZ2h0IDEwMCUKLnJpZ2h0CiAgcmlnaHQgMAogIHRvcCAwCiAgYm90dG9tIDAKICB3aWR0aCAkcmVhZGluZ1NpemUKICBoZWlnaHQgMTAwJQo="},{"version":3,"sources":["ReadingProgress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReadingProgress.vue","sourceRoot":"node_modules/_vuepress-plugin-reading-progress@1.0.10@vuepress-plugin-reading-progress","sourcesContent":["<template>\n  <ClientOnly>\n    <div v-if=\"$readingShow\" :class=\"$readingShow\" class=\"reading-progress\">\n      <div :style=\"progressStyle\" class=\"progress\"></div>\n    </div>\n  </ClientOnly>\n</template>\n\n<script>\nexport default {\n  name: 'ReadingProgress',\n  data () {\n    return {\n      readingTop: 0,\n      readingHeight: 1,\n      progressStyle: null,\n      transform: undefined,\n      running: false\n    }\n  },\n  watch: {\n    $readingShow () {\n      this.progressStyle = this.getProgressStyle()\n      this.$readingShow && window.addEventListener('scroll', this.base)\n    }\n  },\n  mounted () {\n    this.transform = this.getTransform()\n    this.progressStyle = this.getProgressStyle()\n    this.$readingShow && window.addEventListener('scroll', this.base)\n  },\n  beforeDestroy () {\n    this.$readingShow && window.removeEventListener('scroll', this.base)\n  },\n  methods: {\n    base() {\n      if (!this.running) {\n        this.running = true\n        requestAnimationFrame(this.getReadingBase)\n      }\n    },\n    getReadingBase () {\n      this.readingHeight = this.getReadingHeight() - this.getScreenHeight()\n      this.readingTop = this.getReadingTop()\n      this.progressStyle = this.getProgressStyle()\n      this.running = false\n    },\n    getReadingHeight () {\n      return Math.max(document.body.scrollHeight, document.body.offsetHeight, 0)\n    },\n    getScreenHeight () {\n      return Math.max(window.innerHeight, document.documentElement.clientHeight, 0)\n    },\n    getReadingTop () {\n      return Math.max(window.pageYOffset, document.documentElement.scrollTop, 0)\n    },\n    getTransform () {\n      const div = document.createElement('div')\n      const transformList = ['transform', '-webkit-transform', '-moz-transform', '-o-transform', '-ms-transform']\n      return transformList.find(item => item in div.style) || undefined\n    },\n    getProgressStyle () {\n      const progress = this.readingTop / this.readingHeight\n      switch (this.$readingShow) {\n        case 'top':\n        case 'bottom':\n          if (this.transform) {\n            return `${this.transform}: scaleX(${progress})`\n          } else {\n            return `width: ${progress * 100}%`\n          }\n          break\n        case 'left':\n        case 'right':\n          if (this.transform) {\n            return `${this.transform}: scaleY(${progress})`\n          } else {\n            return `height: ${progress * 100}%`\n          }\n          break\n        default:\n          return null\n          break\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n$readingBgColor ?= transparent\n$readingZIndex ?= 1000\n$readingSize ?= 3px\n$readingProgressColor ?= $accentColor\n$readingProgressImage ?= none\n\n.reading-progress\n  position fixed\n  z-index $readingZIndex\n  background $readingBgColor\n  overflow hidden\n  .progress\n    width 100%\n    height 100%\n    background $readingProgressColor\n    background-image $readingProgressImage\n    transform-origin 0% 0%\n    transition: transform .2s ease-out\n.top\n  top 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.bottom\n  bottom 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.left\n  left 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n.right\n  right 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n</style>\n"]}]}